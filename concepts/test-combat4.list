
color 15,0 :? chr$(147)
? "traveller space combat v4\x11"

hw$ = ""
for x=1 to 80 : hw$ = hw$ + chr$(195) :next x
hr$ = chr$(28) + hw$ + chr$(155)

dl$ = ""
for x=1 to 80 : dl$ = dl$ + "." :next x

? hr$
? "   battle a corsair and its crew of remorseless vargr pirates!"
?
? "   to win, you must protect your power plant"
? "   and wear down the enemy."
?
? "   good luck!\x11"
? hr$

input "press <return> to begin"; yn$ :x = rnd(-ti)

gosub {:initialize crew}
gosub {:initialize ship}
gosub {:initialize enemy}

; --------------------- long variable names ------------------
longvar \round
longvar \battle
longvar \repair
longvar \medical

longvar \enemy.size
longvar \enemy.damage

longvar \component.label
longvar \component.subtype
longvar \component.damage
longvar \component.count

longvar \crew.name
longvar \crew.damage
longvar \crew.count

\round   = 1
\battle  = 30
\repair  = 30
\medical = 30

? chr$(147);

? hr$ "  sensop's report" :? hr$;
? "  keptin, ve are facing a size" \enemy.size "corsair\x11"

rem --------------------- main loop ------------------
{:main loop}
   ? hr$ "  helm report, round"; \round: ? hr$;
   
   ? "  captain, shall we:\x11"
   ? "    1 - attack!"
   ? "    2 - deploy repair detail!"   
   ? "    3 - deploy medical detail!"
   ? "    4 - make an emergency jump!"
   ? "    5 - signal surrender!\x11"

{:your command}
   input "  your command"; cm$ :cm = val(cm$)
   if cm < 1 or cm > 5 goto {:your command}

   ? chr$(147);

   \battle = 30 :\repair = 30 :\medical = 30

   if cm = 1 then \battle = 60
   if cm = 2 then \repair = 60
   if cm = 3 then \medical = 60
   if cm = 4 then gosub {:emergency jump}
   if cm = 5 goto {:surrender}
   
   gosub {:battle action}  :input "   press <return>"; yn$
   gosub {:repair action}  :input "   press <return>"; yn$
   gosub {:medical action} :input "   press <return>"; yn$
   gosub {:check powerplant}
   gosub {:check enemy}

   \round = \round + 1

goto {:main loop}

rem
rem -------------------- battle action -----------------
rem
{:battle action}
? hr$ "  battle report" :?hr$;

for x = 6 to \component.count
   q=0
   for p = 1 to \component.damage(x)
      q = q + int(rnd(1)*6)
   next
   if q > 8 goto {:next turret}
   d = int(rnd(1)*\battle)
   ? "   turret" x-5;
   if d < 11 then ? "nicks the enemy ship."
   if d > 10 and d < 21 then ? "hits the enemy ship!"
   if d > 20 then ? "wallops the enemy ship!!"
   \enemy.damage = \enemy.damage + d
{:next turret}
next
?
for x = 1 to \enemy.size
   if int(rnd(1)*6)+int(rnd(1)*6)+2 > 6 goto {:next enemy turret}

   t = int(rnd(1)*\component.count)
   ? "   our " \component.label$(t) " is hit."
   \component.damage(t) = \component.damage(t)+1

   if int(rnd(1)*6)+int(rnd(1)*6)+2 > 6 goto {:next enemy turret}

   c = int(rnd(1)*\crew.count)
   ? "   " \crew.name$(c) " is hit."
   \crew.damage(c) = \crew.damage(c) + 1

{:next enemy turret}
next 

?

return

rem
rem --------------- check enemy status --------------
rem
{:check enemy}
 
if \enemy.damage < \enemy.size * 100 then return
if \enemy.damage - \enemy.size > 100 goto {:the enemy surrenders}

? hr$ "  sensop's report" :? hr$;
? "   ze enemy runs!  ve have von!!" :end

{:the enemy surrenders}
? hr$ "  helm report" :?hr$
? "   the enemy surrenders!"
? "   we have claimed salvage rights to their" \enemy.size*100 "ton corsair!"

end


rem
rem --------------- check powerplant status --------------
rem
{:check powerplant}

if \component.damage(4) = \component.subtype(4)+1 goto {:powerplant warning}
if \component.damage(4) <= \component.subtype(4)+1 then return
if \crew.damage(2) > 1 goto {:something broke}
? hr$ "  engineer's report" :?hr$;
? "  ach captain, the powerrr plant's a complete wrrreck!"
? "  we're dead in th' waterrr!"
goto {:boarding action}

{:something broke}
? hr$ "  helm report" :?hr$;
? "  captain, the engines aren't responding. the ship appears to be dead.\x11"
goto {:boarding action}

{:powerplant warning}
? hr$ "  engineer's report" :?hr$;
? "  ach captain, the powerrr plant's a mess."
? "  one more hit like that an' we'rrre finished!"
return


rem
rem -------------------- repair action -----------------
rem
{:repair action}
? hr$ "  damage control report" :?hr$;

if \crew.damage(2) > 1 then ? "  the engineer is hurt; no report available.\x11" :return

? "", "component",, "status"
? hw$
for x = 0 to \component.count

   if \component.damage(x) > 0 and int(rnd(1)*\repair) > 19 then \component.damage(x) = \component.damage(x) - 1

   if x = 5 then ? dl$;
   ? "   ",
   ? left$(\component.label$(x)+"             ",16),
   a = \component.subtype(x)
   b = \component.damage(x)

   if b>0 and b>a and x<6 then ? "   " + chr$(28) + "out of action" + chr$(155)

   if b>0 and (b<=a or x>5) then ? "   " + chr$(158) + "damaged" + chr$(155)

   if b=0 then ? "   " + chr$(153) + "ok" + chr$(155)

{:next repair action}
next
?
return


rem
rem -------------------- medical action -----------------
rem
{:medical action}
? hr$ "  medical report" :?hr$;

if \crew.damage(3) > 1 then ? "  the medic is hurt; no report available.\x11" :return

? "", "crewmember", "role      ", "wounds"
? hw$
for x = 0 to \crew.count
   if \crew.damage(x) > 0 and int(rnd(1)*\medical) > 19 then \crew.damage(x)=\crew.damage(x)-1
   if \crew.damage(x) > 0 and int(rnd(1)*\medical) > 29 then \crew.damage(x)=\crew.damage(x)-1
   if \crew.damage(x) > 0 and int(rnd(1)*\medical) > 39 then \crew.damage(x)=\crew.damage(x)-1
   if x = 4 then ? dl$;
   ? "   ",
   ? left$(\crew.name$(x)+"            ",16),

   r$ = "          "
   if x = 0 then r$ = "pilot     "
   if x = 1 then r$ = "astrogator"
   if x = 2 then r$ = "engineer  "
   if x = 3 then r$ = "medic     "
   if x = 4 then r$ = "steward   "
   ? r$,

   w$ = chr$(28) + "out of action" + chr$(155)
   if \crew.damage(x) = 0 then w$ = chr$(153) + "ok" + chr$(155)
   if \crew.damage(x) = 1 then w$ = chr$(158) + "wounded" + chr$(155)
   ? w$
next
?
return

rem 
rem ---------------- initialize crew ----------------
rem
rem  crew roles are individualized as follows:
rem
rem    0 - pilot
rem    1 - astrogator
rem    2 - engineer
rem    3 - medic
rem    4 - steward/freightmaster
rem    5 and up - gunners
rem
{:initialize crew}

dim \crew.name$(24), \crew.damage(24)

\crew.count = -1
{:read crew}
   \crew.count = \crew.count+1
   read \crew.name$(\crew.count)
   \crew.damage(\crew.count) = 0
   if \crew.name$(\crew.count) <> "-1" goto {:read crew}

\crew.count = \crew.count - 1

data jamison, akrind, kodray, arrlanroughl, reynaldi, sharik, -1

return


rem
rem ----------------- initialize ship ------------------
rem
rem   "subtype" is drive rating, weapon subtype, or fuel amount.
rem
rem   component 0 is "the hull".
rem   component 1 is streamlining, generally.
rem   component 2 is the maneuver drive.
rem   component 3 is the jump drive.
rem   component 4 is the power plant.
rem   component 5 is fuel tankage.
rem   component 6 and up are defenses.
rem
{:initialize ship}

dim \component.label$(40), \component.subtype(40), \component.damage(40)

\component.count=-1
{:read component}
   \component.count=\component.count+1
   read \component.label$(\component.count)
   read \component.subtype(\component.count)
   \component.damage(\component.count) = 0
   if \component.label$(\component.count) <> "-1" goto {:read component}

\component.count = \component.count - 1

data hull,         	0 
data streamlining, 	0 
data maneuver drive,    1 
data jump drive,        1 
data power plant,       1 
data fuel tankage,      10
data turret 1,      	2
data turret 2,     	2

rem data turret 1l,   21,   turret 2l,  22,  turret 3l,  23
rem data turret 1m,   31,   turret 2m,  32,  turret 3m,  33
rem data turret 1s,   41,   turret 2s,  42,  turret 3s,  43
rem
rem data barbette l,  53,   bay l,      54
rem data barbette m,  63,   bay m,      64
rem data barbette s,  73,   bay s,      74
rem data barbette a,  83,   bay a,      84
data -1, -1

return

rem
rem ------------------- initialize enemy ------------------
rem
rem  for now, let's just use a simple damage level
{:initialize enemy}

\enemy.size = int(rnd(1)*8+2) :rem 200 to 900 tons
\enemy.damage = 0

return

rem
rem ------------------ emergency jump --------------------
rem
{:emergency jump}

if \crew.damage(1) > 0 goto {:astrogator wounded}
if \crew.damage(2) > 0 goto {:engineer wounded}

if \component.damage(3) >= \component.subtype(3) goto {:jump not operational}

if int(rnd(1)*6)+int(rnd(1)*6)+2 > 6 goto {:jump fail}

? "   aye, you've got it, captain!"
for t = 1 to 1000 : tt = sqr(12345) :next
? "   captain, we've successfully jumped to safety!"
end

{:astrogator wounded}
? hr$ "   helm report" :? hr$;
? "   our astrogator is wounded, and cannot calculate a jump.\x11"
return

{:engineer wounded}
? hr$ "   helm report" :? hr$;
? "   our engineer is wounded, and cannot operate the jump drive.\x11"
return

{:jump fail}
? hr$ "   engineer's report" :? hr$;
? "   ach, we kenna jump yet captain, gimme 20 morrre minutes!\x11"
return

{:jump not operational}
? hr$ "   engineer's report" :? hr$;
? "   ach, the jump drives arrre doon, captain!"
? "   we ne kenna jump until they'rrre repairrred!\x11"
return

rem
rem --------------------- surrender ----------------------
rem
{:surrender}
? hr$ "  helm report": ?hr$;
? "  surrender acknowledged. crew is arming themselves.\x11"
for t = 1 to 1000: tt=sqr(12345) :next

{:boarding action}
? hr$ "  helm report": ?hr$;
? "  captain, we have been boarded."
for t = 1 to 1000: tt=sqr(12345) :next
? "  fighting reported in all areas."
for t = 1 to 1000: tt=sqr(12345) :next

rr = int(rnd(1)*6)+int(rnd(1)*6)+2
if rr < 6 then ? "  we have repelled the pirates!!" :end
if rr < 8 then ? "  our cargo and vehicles have been taken." :end
if rr < 10 then ? "  we have been stranded on a marginal world." :end

? "  the crew has been sold into slavery."
end

